`timescale 1ns / 1ps
`include "common_definitions.vh"

module ntt_1024_tb;

  parameter int N = 1024;

  logic clk;
  logic rst_n;

  logic mode;
  logic start;
  logic done;

  logic signed[14:0] expected_polynomial [N];

  logic finished, finished_i, finished_ii, finished_iii;
  int index = 0;

  logic [`BRAM_ADDR_WIDTH-1:0] bram1_addr_a;
  logic [`BRAM_DATA_WIDTH-1:0] bram1_din_a, bram1_dout_a;
  logic bram1_we_a;
  logic [`BRAM_ADDR_WIDTH-1:0] bram1_addr_b;
  logic [`BRAM_DATA_WIDTH-1:0] bram1_din_b, bram1_dout_b;
  logic bram1_we_b;
  bram_6144x128_preinit_for_ntt1024_tb bram1 (
                                     .clka(clk),
                                     .addra(bram1_addr_a),
                                     .dina(bram1_din_a),
                                     .wea(bram1_we_a),
                                     .douta(bram1_dout_a),

                                     .clkb(clk),
                                     .addrb(bram1_addr_b),
                                     .dinb(bram1_din_b),
                                     .web(bram1_we_b),
                                     .doutb(bram1_dout_b)
                                   );

  logic [`BRAM_ADDR_WIDTH-1:0] bram2_addr_a;
  logic [`BRAM_DATA_WIDTH-1:0] bram2_din_a, bram2_dout_a;
  logic bram2_we_a;
  logic [`BRAM_ADDR_WIDTH-1:0] bram2_addr_b;
  logic [`BRAM_DATA_WIDTH-1:0] bram2_din_b, bram2_dout_b;
  logic bram2_we_b;
  bram_6144x128 bram2 (
                  .clka(clk),
                  .addra(bram2_addr_a),
                  .dina(bram2_din_a),
                  .douta(bram2_dout_a),
                  .wea(bram2_we_a),

                  .clkb(clk),
                  .addrb(bram2_addr_b),
                  .dinb(bram2_din_b),
                  .doutb(bram2_dout_b),
                  .web(bram2_we_b)
                );

  ntt #(
        .N(N)
      )uut(
        .clk(clk),
        .rst_n(rst_n),
        .mode(mode),
        .start(start),
        .done(done),

        .bram1_addr_a(bram1_addr_a),
        .bram1_din_a(bram1_din_a),
        .bram1_dout_a(bram1_dout_a),
        .bram1_we_a(bram1_we_a),
        .bram1_addr_b(bram1_addr_b),
        .bram1_din_b(bram1_din_b),
        .bram1_dout_b(bram1_dout_b),
        .bram1_we_b(bram1_we_b),

        .bram2_addr_a(bram2_addr_a),
        .bram2_din_a(bram2_din_a),
        .bram2_dout_a(bram2_dout_a),
        .bram2_we_a(bram2_we_a),
        .bram2_addr_b(bram2_addr_b),
        .bram2_din_b(bram2_din_b),
        .bram2_dout_b(bram2_dout_b),
        .bram2_we_b(bram2_we_b)
      );

  // Check if result is correct
  always_ff @(posedge clk) begin
    if(finished_iii === 1 && index < N/2) begin
      if(bram1_dout_a !== expected_polynomial[index])
        $fatal(1, "Test failed at index %d. Expected %d, got %d", index, expected_polynomial[index], bram1_dout_a);
      if(bram1_dout_b !== expected_polynomial[index + N/2])
        $fatal(1, "Test failed at index %d. Expected %d, got %d", index + N/2, expected_polynomial[index + N/2], bram1_dout_b);
      index++;
    end

    finished_i <= finished;
    finished_ii <= finished_i;
    finished_iii <= finished_ii;
  end

  always #5 clk = ~clk;

  initial begin
    finished = 0;

    clk = 1;

    rst_n = 0;
    #10;
    rst_n = 1;
    mode = 0;
    expected_polynomial = '{11436, 2816, 10436, 2523, 6525, 9420, 6666, 11263, 3079, 6734, 4705, 9067, 1032, 10817, 4531, 10967, 3186, 11171, 7805, 10868, 10392, 8004, 4575, 6794, 338, 8738, 5120, 3541, 10471, 6944, 7558, 9251, 8276, 4997, 10111, 7051, 4738, 8769, 9227, 4258, 10308, 9229, 9706, 10006, 4004, 7149, 7972, 9341, 11639, 10833, 10122, 4401, 11328, 5299, 4239, 3367, 7123, 1935, 9219, 6199, 6036, 7904, 11446, 4186, 1714, 6060, 3320, 482, 4365, 6781, 2712, 1839, 686, 5415, 5631, 12222, 10984, 281, 896, 2078, 7509, 11293, 11264, 10054, 4737, 9939, 7009, 1240, 9316, 9117, 6024, 7582, 4797, 5281, 3194, 11199, 4524, 11711, 10413, 5764, 10657, 10179, 8710, 4178, 5544, 2027, 4186, 8600, 4522, 1540, 9629, 12161, 1015, 2570, 1, 5580, 4601, 9937, 5844, 4731, 11628, 4431, 2722, 8190, 8686, 7360, 3590, 10524, 1639, 7113, 9039, 11697, 9300, 4641, 9365, 9580, 9658, 9214, 1597, 8864, 12185, 4643, 9117, 10773, 9898, 2566, 7447, 6744, 7312, 5970, 12042, 1282, 10400, 11928, 2802, 9578, 7631, 4659, 8113, 7257, 11691, 8312, 5221, 10396, 4111, 4834, 8025, 6750, 4631, 2724, 328, 11970, 8872, 8578, 12141, 794, 434, 345, 3412, 2525, 3766, 925, 3950, 424, 6624, 10784, 7627, 5942, 3294, 8632, 7525, 6693, 8260, 4987, 2301, 6723, 11987, 10063, 105, 394, 5764, 5522, 4916, 11575, 10409, 2674, 1255, 1006, 8382, 6599, 2068, 2637, 175, 8298, 1588, 3366, 5207, 3193, 8498, 8472, 6104, 9835, 11033, 2628, 9317, 9069, 3566, 10461, 9947, 1367, 9696, 7549, 4567, 814, 2477, 766, 9526, 2757, 3674, 11708, 5281, 8429, 10823, 2272, 3267, 8644, 9183, 3410, 11584, 3147, 11002, 7720, 7707, 4621, 7522, 8121, 67, 9044, 10422, 9081, 3861, 2949, 922, 4923, 9769, 9360, 1498, 11514, 4072, 3908, 1942, 10538, 10889, 851, 1990, 8255, 10700, 616, 9012, 3377, 2939, 2808, 4240, 4981, 5685, 2878, 926, 3730, 401, 11420, 7940, 10111, 8231, 7809, 3840, 1679, 6194, 7822, 9841, 7070, 4573, 3106, 2567, 1410, 3646, 3211, 9551, 8911, 8430, 8141, 278, 12129, 6786, 1838, 11403, 6257, 6435, 700, 1022, 4954, 8263, 1778, 5703, 9010, 9212, 1539, 5000, 12071, 4702, 6569, 8639, 6817, 10012, 2885, 4846, 11118, 3189, 847, 3693, 1308, 9170, 1878, 3404, 2826, 11604, 11875, 5060, 11608, 10588, 10, 4260, 289, 7324, 6545, 6198, 7691, 10955, 310, 6480, 6843, 3514, 263, 9966, 10781, 6576, 6772, 4871, 11072, 9949, 8867, 3843, 61, 10778, 6031, 8620, 8560, 12160, 5379, 11773, 348, 2055, 10529, 6197, 5408, 12210, 8819, 11079, 10470, 7183, 10234, 3179, 11187, 4601, 5030, 6122, 1302, 10355, 10456, 10709, 5858, 3110, 102, 7027, 11304, 2536, 106, 1634, 3503, 445, 2798, 4960, 9397, 1034, 12088, 1974, 3104, 10735, 7047, 9850, 2456, 10154, 11712, 1533, 7371, 4398, 1944, 48, 8859, 9298, 222, 5753, 8478, 4234, 2259, 8801, 420, 6249, 6683, 6023, 1237, 559, 5824, 3706, 10463, 599, 8224, 6296, 6389, 9705, 4873, 9349, 1533, 7237, 9928, 1785, 5717, 6648, 9532, 9374, 5192, 1521, 12117, 11644, 2362, 11664, 736, 2216, 6070, 9346, 9373, 4406, 93, 3490, 10173, 10662, 6821, 7077, 9104, 3008, 5513, 11117, 3595, 340, 4424, 8943, 9814, 11273, 4309, 6443, 7945, 1961, 6813, 10296, 5008, 7047, 11828, 3389, 6110, 9556, 9280, 4, 623, 4800, 4150, 7296, 6388, 4998, 5237, 7549, 10705, 1285, 9604, 1100, 11127, 7501, 3601, 4543, 12270, 6041, 9551, 3249, 10715, 5805, 3977, 9079, 2933, 10368, 7924, 634, 7118, 12037, 1742, 4232, 7654, 5679, 4939, 5379, 3019, 10811, 1724, 7859, 5890, 6276, 8327, 8052, 1998, 9972, 4604, 3890, 3491, 10646, 10981, 810, 1635, 6982, 4071, 571, 861, 7221, 9781, 1923, 11075, 4443, 8155, 1515, 7127, 5035, 8877, 2506, 11853, 1308, 10343, 8264, 1687, 7437, 5091, 1386, 11790, 5036, 12004, 10764, 1433, 11439, 9568, 8120, 9057, 10952, 792, 4011, 7796, 471, 5572, 11402, 1001, 8258, 4749, 1303, 3741, 8602, 12064, 5106, 11102, 9115, 8695, 8585, 870, 10987, 9242, 8513, 11367, 10551, 8739, 10770, 9286, 7314, 5989, 7251, 1940, 10748, 10771, 10555, 8285, 4382, 7191, 10772, 6666, 4209, 5700, 11997, 4354, 12096, 6259, 1521, 3724, 7185, 4977, 10798, 4085, 4104, 5430, 2573, 7470, 3665, 3134, 1082, 6672, 10460, 8291, 5635, 1157, 4361, 10989, 7844, 6403, 2386, 9791, 3119, 1213, 10403, 7210, 498, 9288, 3248, 2799, 6678, 7126, 1952, 532, 5471, 3755, 9607, 9930, 9745, 4662, 541, 12123, 10805, 3846, 1633, 8166, 2229, 6979, 9074, 3564, 8988, 2191, 10290, 5230, 5448, 11627, 5269, 2864, 2090, 6093, 1701, 9485, 8865, 9587, 10115, 6583, 6209, 2705, 9830, 10768, 10483, 9491, 9100, 8924, 1940, 1342, 11390, 11939, 342, 3346, 473, 1934, 7882, 3528, 1576, 6868, 6003, 208, 8818, 3896, 9284, 9260, 7671, 2261, 7617, 3404, 1553, 5109, 1075, 9135, 10842, 9260, 6747, 11363, 9083, 2806, 3033, 7613, 6633, 8646, 4205, 6657, 5937, 2592, 5029, 2983, 2474, 3827, 1948, 7963, 2641, 5902, 9068, 9128, 4241, 8263, 4124, 271, 11677, 5682, 3938, 12285, 5605, 1388, 1250, 6713, 11605, 6731, 11008, 10095, 4463, 8907, 10737, 4806, 4720, 10754, 3841, 3095, 8306, 3450, 7381, 7013, 67, 7921, 5339, 4144, 10053, 7785, 3219, 10345, 6470, 3778, 3699, 1848, 3549, 6598, 6044, 7282, 1956, 7919, 8486, 2640, 11517, 9573, 5065, 1424, 1882, 8715, 8790, 1817, 11546, 7727, 1752, 8558, 10560, 10623, 8488, 11101, 12161, 106, 1386, 8694, 6865, 8608, 9421, 3300, 2055, 7500, 10958, 1550, 329, 7750, 11006, 2437, 2592, 6496, 9093, 10735, 302, 8040, 10847, 12153, 10256, 4365, 10429, 2124, 61, 5058, 7256, 1628, 9643, 5612, 1030, 6862, 604, 8494, 5462, 595, 6090, 6142, 9525, 9594, 3593, 9783, 7997, 2473, 6259, 11145, 11267, 8856, 4374, 6501, 11684, 10734, 3991, 12281, 8966, 4021, 5625, 11676, 2747, 10010, 7541, 9090, 531, 6715, 4000, 3178, 10859, 778, 6706, 9540, 6092, 1357, 7883, 10080, 7232, 11120, 11520, 6662, 9810, 7478, 7061, 6954, 8710, 3422, 10868, 4592, 10522, 1034, 191, 2524, 8222, 7589, 12240, 5915, 9713, 3562, 7005, 5394, 3144, 2433, 8840, 10635, 65, 10124, 11123, 2915, 2216, 9131, 5935, 7040, 2149, 1457, 950, 1018, 5868, 12270, 563, 4461, 5716, 637, 6440, 5328, 4935, 4568, 5397, 10704, 8520, 2227, 5474, 18, 4299, 3115, 10454, 4755, 4794, 2822, 3214, 661, 8841, 1355, 5965, 2431, 9181, 8317, 12184, 3575, 6661, 11978, 11065, 5141, 3679, 3867, 6668, 3127, 5412, 9237, 9218, 7709, 9930, 4576, 10688, 8576, 7721, 10869, 12155, 2575, 9245, 745, 3880, 9840, 2330, 5756, 5663, 2231, 11518, 9698, 227, 7051, 10888, 8620, 8278, 4391, 8755, 8457, 12162, 4242, 432, 6048, 345, 11205, 3073, 6634, 622, 5280, 4155, 1922, 3584, 8705};

    // Start NTT
    start <= 1;
    #10;
    start <= 0;

    // Wait for NTT to finish
    while (!done)
      #10;

    finished <= 1;

    for (int i = 0; i < N/2; i++) begin
      #10;
      bram1_addr_a <= i;
      bram1_addr_b <= i + N/2;
    end

    $display("All tests for ntt_1024 passed!");
    $finish;

  end

endmodule
