`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
//
// Read only memory used to store pre-computed twiddle factors.
//
// Supported sizes of N are 8, 16, 32, 512, and 1024. For final version remove 8, 16 and 32 to decrease resource usage.
//
// The factors were computed using the primitive_root.py script
//
//////////////////////////////////////////////////////////////////////////////////


module twiddle_rom#(
    parameter integer N
  )(
    input logic [$clog2(N)-1:0] addr,
    output logic [14:0] data
  );

  // Primitive root: 4043
  (* rom_style = "block" *) reg [14:0] twiddle_rom_8 [0:3] = {1, 4043, 1479, 7143};

  // Primitive root: 722
  (* rom_style = "block" *) reg [14:0] twiddle_rom_16 [0:7] = {1, 722, 5146, 4134, 10810, 1305, 8246, 5736};

  // Primitive root: 1212
  (* rom_style = "block" *) reg [14:0] twiddle_rom_32 [0:15] = {1, 1212, 6553, 3542, 4043, 9094, 10984, 3621, 1479, 10643, 8155, 3504, 7143, 5860, 11567, 9744};

  // Primitive root: 3
  (* rom_style = "block" *) reg [14:0] twiddle_rom_512 [0:255] = {1, 3, 9, 27, 81, 243, 729, 2187, 6561, 7394, 9893, 5101, 3014, 9042, 2548, 7644, 10643, 7351, 9764, 4714, 1853, 5559, 4388, 875, 2625, 7875, 11336, 9430, 3712, 11136, 8830, 1912, 5736, 4919, 2468, 7404, 9923, 5191, 3284, 9852, 4978, 2645, 7935, 11516, 9970, 5332, 3707, 11121, 8785, 1777, 5331, 3704, 11112, 8758, 1696, 5088, 2975, 8925, 2197, 6591, 7484, 10163, 5911, 5444, 4043, 12129, 11809, 10849, 7969, 11618, 10276, 6250, 6461, 7094, 8993, 2401, 7203, 9320, 3382, 10146, 5860, 5291, 3584, 10752, 7678, 10745, 7657, 10682, 7468, 10115, 5767, 5012, 2747, 8241, 145, 435, 1305, 3915, 11745, 10657, 7393, 9890, 5092, 2987, 8961, 2305, 6915, 8456, 790, 2370, 7110, 9041, 2545, 7635, 10616, 7270, 9521, 3985, 11955, 11287, 9283, 3271, 9813, 4861, 2294, 6882, 8357, 493, 1479, 4437, 1022, 3066, 9198, 3016, 9048, 2566, 7698, 10805, 7837, 11222, 9088, 2686, 8058, 11885, 11077, 8653, 1381, 4143, 140, 420, 1260, 3780, 11340, 9442, 3748, 11244, 9154, 2884, 8652, 1378, 4134, 113, 339, 1017, 3051, 9153, 2881, 8643, 1351, 4053, 12159, 11899, 11119, 8779, 1759, 5277, 3542, 10626, 7300, 9611, 4255, 476, 1428, 4284, 563, 1689, 5067, 2912, 8736, 1630, 4890, 2381, 7143, 9140, 2842, 8526, 1000, 3000, 9000, 2422, 7266, 9509, 3949, 11847, 10963, 8311, 355, 1065, 3195, 9585, 4177, 242, 726, 2178, 6534, 7313, 9650, 4372, 827, 2481, 7443, 10040, 5542, 4337, 722, 2166, 6498, 7205, 9326, 3400, 10200, 6022, 5777, 5042, 2837, 8511, 955, 2865, 8595, 1207, 3621, 10863, 8011, 11744, 10654, 7384, 9863, 5011, 2744, 8232, 118, 354, 1062, 3186, 9558, 4096};

  // Primitive root: 49
  (* rom_style = "block" *) reg [14:0] twiddle_rom_1024 [0:511] = {1, 49, 2401, 7048, 1260, 295, 2166, 7822, 2319, 3030, 1002, 12231, 9447, 8210, 9042, 654, 7468, 9551, 1017, 677, 8595, 3329, 3364, 5079, 3091, 3991, 11224, 9260, 11336, 2459, 9890, 5339, 3542, 1512, 354, 5057, 2013, 325, 3636, 6118, 4846, 3963, 9852, 3477, 10616, 4046, 1630, 6136, 5728, 10314, 1537, 1579, 3637, 6167, 7247, 11011, 11112, 3772, 493, 11868, 3949, 9166, 6730, 10256, 10984, 9789, 390, 6821, 2426, 8273, 12129, 4449, 9088, 2908, 7313, 1956, 9821, 1958, 9919, 6760, 11726, 9280, 27, 1323, 3382, 5961, 9442, 7965, 9326, 2281, 1168, 8076, 2476, 10723, 9289, 468, 10643, 5369, 5012, 12097, 2881, 5990, 10863, 3860, 4805, 1954, 9723, 9445, 8112, 4240, 11136, 4948, 8961, 8974, 9611, 3957, 9558, 1360, 5195, 8775, 12149, 5429, 7952, 8689, 7935, 7856, 3985, 10930, 7143, 5915, 7188, 8120, 4632, 5766, 12176, 6752, 11334, 2361, 5088, 3532, 1022, 922, 8311, 1702, 9664, 6554, 1632, 6234, 10530, 12121, 4057, 2169, 7969, 9522, 11885, 4782, 827, 3656, 7098, 3710, 9744, 10474, 9377, 4780, 729, 11143, 5291, 1190, 9154, 6142, 6022, 142, 6958, 9139, 5407, 6874, 5023, 347, 4714, 9784, 145, 7105, 4053, 1973, 10654, 5908, 6845, 3602, 4452, 9235, 10111, 3879, 5736, 10706, 8456, 8807, 1428, 8527, 12286, 12142, 5086, 3434, 8509, 11404, 5791, 1112, 5332, 3199, 9283, 174, 8526, 12237, 9741, 10327, 2174, 8214, 9238, 10258, 11082, 2302, 2197, 9341, 3016, 316, 3195, 9087, 2859, 4912, 7197, 8561, 1663, 7753, 11227, 9407, 6250, 11314, 1381, 6224, 10040, 400, 7311, 1858, 5019, 151, 7399, 6170, 7394, 5925, 7678, 7552, 1378, 6077, 2837, 3834, 3531, 973, 10810, 1263, 442, 9369, 4388, 6099, 3915, 7500, 11119, 4115, 5011, 12048, 480, 11231, 9603, 3565, 2639, 6421, 7404, 6415, 7110, 4298, 1689, 9027, 12208, 8320, 2143, 6695, 8541, 683, 8889, 5446, 8785, 350, 4861, 4698, 9000, 10885, 4938, 8471, 9542, 576, 3646, 6608, 4278, 709, 10163, 6427, 7698, 8532, 242, 11858, 3459, 9734, 9984, 9945, 8034, 418, 8193, 8209, 8993, 10542, 420, 8291, 722, 10800, 773, 1010, 334, 4077, 3149, 6833, 3014, 218, 10682, 7280, 339, 4322, 2865, 5206, 9314, 1693, 9223, 9523, 11934, 7183, 7875, 4916, 7393, 5876, 5277, 504, 118, 5782, 671, 8301, 1212, 10232, 9808, 1321, 3284, 1159, 7635, 5445, 8736, 10238, 10102, 3438, 8705, 8719, 9405, 6152, 6512, 11863, 3704, 9450, 8357, 3956, 9509, 11248, 10436, 7515, 11854, 3263, 130, 6370, 4905, 6854, 4043, 1483, 11222, 9162, 6534, 652, 7370, 4749, 11499, 10446, 8005, 11286, 9, 441, 9320, 1987, 11340, 2655, 7205, 8953, 8582, 2692, 9018, 11767, 11289, 156, 7644, 5886, 5767, 12225, 9153, 6093, 3621, 5383, 5698, 8844, 3241, 11341, 2704, 9606, 3712, 9842, 2987, 11184, 7300, 1319, 3186, 8646, 5828, 2925, 8146, 5906, 6747, 11089, 2645, 6715, 9521, 11836, 2381, 6068, 2396, 6803, 1544, 1922, 8155, 6347, 3778, 787, 1696, 9370, 4437, 8500, 10963, 8760, 11414, 6281, 544, 2078, 3510, 12233, 9545, 723, 10849, 3174, 8058, 1594, 4372, 5315, 2366, 5333, 3248, 11684, 7222, 9786, 243, 11907, 5860, 4493, 11244, 10240, 10200, 8240, 10512, 11239, 9995, 10484, 9867, 4212, 9764, 11454, 8241, 10561, 1351, 4754, 11744, 10162, 6378, 5297, 1484, 11271, 11563, 1293, 1912, 7665, 6915, 7032, 476, 11035};

  // Read data from ROM
  assign data =
         (N == 8) ? twiddle_rom_8[addr] :
         (N == 16) ? twiddle_rom_16[addr] :
         (N == 32) ? twiddle_rom_32[addr] :
         (N == 512) ? twiddle_rom_512[addr] :
         (N == 512) ? twiddle_rom_1024[addr]: 0;

endmodule
